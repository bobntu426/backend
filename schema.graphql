type Query {
    getAllPeople(gender:Gender):[Person]
    getTwentyPeople(minimum:Int,maximum:Int,gender:Gender):[Person]
    getOnePerson(id:Int):Person
    getAllPeopleNum(gender:Gender):Int

    getEvent(state:EventState):[Event]
    getEventNum(state:EventState):Int

}

type Mutation {
    deleteAllPeople:String
    deleteAllEvent:String
}

type Person{
    name: String
    score: Int
    gender: Gender
    school: String
    playType: String
    hand: String
    age: String
    id: Int
    popular: Int
    record:[String]
    rank: Int
}

type Event{
    name: String
    date: String
    location: String
    host: String
    info: String
    id: Int
    state: EventState
    result: ResultType
}


type ResultType{
    manGroup:ResultRank
    womanGroup:ResultRank
    manSingle:ResultRank
    womanSingle:ResultRank
    manDouble:ResultRank
    womanDouble:ResultRank
    mixDouble:ResultRank
}
enum EventState{
    finish
    live
    coming
}

type ResultRank{
    first:String
    second:String
    third:[String]
    fourth:String
}


enum Gender{
    male
    female
    mix
}

